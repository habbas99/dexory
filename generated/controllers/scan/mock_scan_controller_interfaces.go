// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controllers/scan/scan_controller.go

// Package mockscancontroller is a generated GoMock package.
package mockscancontroller

import (
	io "io"
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/habbas99/dexory/internal/models"
)

// MockFileStorageClient is a mock of FileStorageClient interface.
type MockFileStorageClient struct {
	ctrl     *gomock.Controller
	recorder *MockFileStorageClientMockRecorder
}

// MockFileStorageClientMockRecorder is the mock recorder for MockFileStorageClient.
type MockFileStorageClientMockRecorder struct {
	mock *MockFileStorageClient
}

// NewMockFileStorageClient creates a new mock instance.
func NewMockFileStorageClient(ctrl *gomock.Controller) *MockFileStorageClient {
	mock := &MockFileStorageClient{ctrl: ctrl}
	mock.recorder = &MockFileStorageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileStorageClient) EXPECT() *MockFileStorageClientMockRecorder {
	return m.recorder
}

// SaveFile mocks base method.
func (m *MockFileStorageClient) SaveFile(dirPath, fileName string, fileContent io.Reader) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFile", dirPath, fileName, fileContent)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFile indicates an expected call of SaveFile.
func (mr *MockFileStorageClientMockRecorder) SaveFile(dirPath, fileName, fileContent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockFileStorageClient)(nil).SaveFile), dirPath, fileName, fileContent)
}

// MockBulkScanRecordClient is a mock of BulkScanRecordClient interface.
type MockBulkScanRecordClient struct {
	ctrl     *gomock.Controller
	recorder *MockBulkScanRecordClientMockRecorder
}

// MockBulkScanRecordClientMockRecorder is the mock recorder for MockBulkScanRecordClient.
type MockBulkScanRecordClientMockRecorder struct {
	mock *MockBulkScanRecordClient
}

// NewMockBulkScanRecordClient creates a new mock instance.
func NewMockBulkScanRecordClient(ctrl *gomock.Controller) *MockBulkScanRecordClient {
	mock := &MockBulkScanRecordClient{ctrl: ctrl}
	mock.recorder = &MockBulkScanRecordClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBulkScanRecordClient) EXPECT() *MockBulkScanRecordClientMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockBulkScanRecordClient) Create(filePath string) (*models.BulkScanRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", filePath)
	ret0, _ := ret[0].(*models.BulkScanRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockBulkScanRecordClientMockRecorder) Create(filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockBulkScanRecordClient)(nil).Create), filePath)
}

// GetAll mocks base method.
func (m *MockBulkScanRecordClient) GetAll() ([]models.BulkScanRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.BulkScanRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockBulkScanRecordClientMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockBulkScanRecordClient)(nil).GetAll))
}

// MockScanServiceClient is a mock of ScanServiceClient interface.
type MockScanServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockScanServiceClientMockRecorder
}

// MockScanServiceClientMockRecorder is the mock recorder for MockScanServiceClient.
type MockScanServiceClientMockRecorder struct {
	mock *MockScanServiceClient
}

// NewMockScanServiceClient creates a new mock instance.
func NewMockScanServiceClient(ctrl *gomock.Controller) *MockScanServiceClient {
	mock := &MockScanServiceClient{ctrl: ctrl}
	mock.recorder = &MockScanServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScanServiceClient) EXPECT() *MockScanServiceClientMockRecorder {
	return m.recorder
}

// ProcessFile mocks base method.
func (m *MockScanServiceClient) ProcessFile(bulkScanRecord *models.BulkScanRecord) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessFile", bulkScanRecord)
}

// ProcessFile indicates an expected call of ProcessFile.
func (mr *MockScanServiceClientMockRecorder) ProcessFile(bulkScanRecord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessFile", reflect.TypeOf((*MockScanServiceClient)(nil).ProcessFile), bulkScanRecord)
}
