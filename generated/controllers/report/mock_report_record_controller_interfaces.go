// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controllers/report/report_record_controller.go

// Package mockreportrecordcontroller is a generated GoMock package.
package mockreportrecordcontroller

import (
	io "io"
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/habbas99/dexory/internal/models"
)

// MockfileStorageClient is a mock of fileStorageClient interface.
type MockfileStorageClient struct {
	ctrl     *gomock.Controller
	recorder *MockfileStorageClientMockRecorder
}

// MockfileStorageClientMockRecorder is the mock recorder for MockfileStorageClient.
type MockfileStorageClientMockRecorder struct {
	mock *MockfileStorageClient
}

// NewMockfileStorageClient creates a new mock instance.
func NewMockfileStorageClient(ctrl *gomock.Controller) *MockfileStorageClient {
	mock := &MockfileStorageClient{ctrl: ctrl}
	mock.recorder = &MockfileStorageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockfileStorageClient) EXPECT() *MockfileStorageClientMockRecorder {
	return m.recorder
}

// SaveFile mocks base method.
func (m *MockfileStorageClient) SaveFile(dirPath, fileName string, fileContent io.Reader) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFile", dirPath, fileName, fileContent)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveFile indicates an expected call of SaveFile.
func (mr *MockfileStorageClientMockRecorder) SaveFile(dirPath, fileName, fileContent interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFile", reflect.TypeOf((*MockfileStorageClient)(nil).SaveFile), dirPath, fileName, fileContent)
}

// MockreportRecordClient is a mock of reportRecordClient interface.
type MockreportRecordClient struct {
	ctrl     *gomock.Controller
	recorder *MockreportRecordClientMockRecorder
}

// MockreportRecordClientMockRecorder is the mock recorder for MockreportRecordClient.
type MockreportRecordClientMockRecorder struct {
	mock *MockreportRecordClient
}

// NewMockreportRecordClient creates a new mock instance.
func NewMockreportRecordClient(ctrl *gomock.Controller) *MockreportRecordClient {
	mock := &MockreportRecordClient{ctrl: ctrl}
	mock.recorder = &MockreportRecordClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockreportRecordClient) EXPECT() *MockreportRecordClientMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockreportRecordClient) Create(bulkScanRecord models.BulkScanRecord, referenceFilePath string) (*models.ReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", bulkScanRecord, referenceFilePath)
	ret0, _ := ret[0].(*models.ReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockreportRecordClientMockRecorder) Create(bulkScanRecord, referenceFilePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockreportRecordClient)(nil).Create), bulkScanRecord, referenceFilePath)
}

// Get mocks base method.
func (m *MockreportRecordClient) Get(reportRecordID uint) (*models.ReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", reportRecordID)
	ret0, _ := ret[0].(*models.ReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockreportRecordClientMockRecorder) Get(reportRecordID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockreportRecordClient)(nil).Get), reportRecordID)
}

// GetAll mocks base method.
func (m *MockreportRecordClient) GetAll() ([]models.ReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.ReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockreportRecordClientMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockreportRecordClient)(nil).GetAll))
}

// MockbulkScanRecordClient is a mock of bulkScanRecordClient interface.
type MockbulkScanRecordClient struct {
	ctrl     *gomock.Controller
	recorder *MockbulkScanRecordClientMockRecorder
}

// MockbulkScanRecordClientMockRecorder is the mock recorder for MockbulkScanRecordClient.
type MockbulkScanRecordClientMockRecorder struct {
	mock *MockbulkScanRecordClient
}

// NewMockbulkScanRecordClient creates a new mock instance.
func NewMockbulkScanRecordClient(ctrl *gomock.Controller) *MockbulkScanRecordClient {
	mock := &MockbulkScanRecordClient{ctrl: ctrl}
	mock.recorder = &MockbulkScanRecordClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockbulkScanRecordClient) EXPECT() *MockbulkScanRecordClientMockRecorder {
	return m.recorder
}

// GetByFileName mocks base method.
func (m *MockbulkScanRecordClient) GetByFileName(fileName string) (*models.BulkScanRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByFileName", fileName)
	ret0, _ := ret[0].(*models.BulkScanRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByFileName indicates an expected call of GetByFileName.
func (mr *MockbulkScanRecordClientMockRecorder) GetByFileName(fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByFileName", reflect.TypeOf((*MockbulkScanRecordClient)(nil).GetByFileName), fileName)
}

// MockcomparisonDataClient is a mock of comparisonDataClient interface.
type MockcomparisonDataClient struct {
	ctrl     *gomock.Controller
	recorder *MockcomparisonDataClientMockRecorder
}

// MockcomparisonDataClientMockRecorder is the mock recorder for MockcomparisonDataClient.
type MockcomparisonDataClientMockRecorder struct {
	mock *MockcomparisonDataClient
}

// NewMockcomparisonDataClient creates a new mock instance.
func NewMockcomparisonDataClient(ctrl *gomock.Controller) *MockcomparisonDataClient {
	mock := &MockcomparisonDataClient{ctrl: ctrl}
	mock.recorder = &MockcomparisonDataClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcomparisonDataClient) EXPECT() *MockcomparisonDataClientMockRecorder {
	return m.recorder
}

// GetAllPaginated mocks base method.
func (m *MockcomparisonDataClient) GetAllPaginated(reportRecordID uint, limit, offset int) ([]models.ComparisonData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPaginated", reportRecordID, limit, offset)
	ret0, _ := ret[0].([]models.ComparisonData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllPaginated indicates an expected call of GetAllPaginated.
func (mr *MockcomparisonDataClientMockRecorder) GetAllPaginated(reportRecordID, limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPaginated", reflect.TypeOf((*MockcomparisonDataClient)(nil).GetAllPaginated), reportRecordID, limit, offset)
}

// MockcomparisonDataServiceClient is a mock of comparisonDataServiceClient interface.
type MockcomparisonDataServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockcomparisonDataServiceClientMockRecorder
}

// MockcomparisonDataServiceClientMockRecorder is the mock recorder for MockcomparisonDataServiceClient.
type MockcomparisonDataServiceClientMockRecorder struct {
	mock *MockcomparisonDataServiceClient
}

// NewMockcomparisonDataServiceClient creates a new mock instance.
func NewMockcomparisonDataServiceClient(ctrl *gomock.Controller) *MockcomparisonDataServiceClient {
	mock := &MockcomparisonDataServiceClient{ctrl: ctrl}
	mock.recorder = &MockcomparisonDataServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockcomparisonDataServiceClient) EXPECT() *MockcomparisonDataServiceClientMockRecorder {
	return m.recorder
}

// GenerateComparisonDataForReport mocks base method.
func (m *MockcomparisonDataServiceClient) GenerateComparisonDataForReport(reportRecord *models.ReportRecord) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GenerateComparisonDataForReport", reportRecord)
}

// GenerateComparisonDataForReport indicates an expected call of GenerateComparisonDataForReport.
func (mr *MockcomparisonDataServiceClientMockRecorder) GenerateComparisonDataForReport(reportRecord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateComparisonDataForReport", reflect.TypeOf((*MockcomparisonDataServiceClient)(nil).GenerateComparisonDataForReport), reportRecord)
}
