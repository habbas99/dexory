// Code generated by MockGen. DO NOT EDIT.
// Source: internal/controllers/export/export_report_controller.go

// Package mockexportreportcontroller is a generated GoMock package.
package mockexportreportcontroller

import (
	os "os"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/habbas99/dexory/internal/models"
)

// MockfileStorageClient is a mock of fileStorageClient interface.
type MockfileStorageClient struct {
	ctrl     *gomock.Controller
	recorder *MockfileStorageClientMockRecorder
}

// MockfileStorageClientMockRecorder is the mock recorder for MockfileStorageClient.
type MockfileStorageClientMockRecorder struct {
	mock *MockfileStorageClient
}

// NewMockfileStorageClient creates a new mock instance.
func NewMockfileStorageClient(ctrl *gomock.Controller) *MockfileStorageClient {
	mock := &MockfileStorageClient{ctrl: ctrl}
	mock.recorder = &MockfileStorageClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockfileStorageClient) EXPECT() *MockfileStorageClientMockRecorder {
	return m.recorder
}

// CreateFile mocks base method.
func (m *MockfileStorageClient) CreateFile(dirPath, fileName string) (*os.File, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFile", dirPath, fileName)
	ret0, _ := ret[0].(*os.File)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFile indicates an expected call of CreateFile.
func (mr *MockfileStorageClientMockRecorder) CreateFile(dirPath, fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFile", reflect.TypeOf((*MockfileStorageClient)(nil).CreateFile), dirPath, fileName)
}

// MockexportReportRecordClient is a mock of exportReportRecordClient interface.
type MockexportReportRecordClient struct {
	ctrl     *gomock.Controller
	recorder *MockexportReportRecordClientMockRecorder
}

// MockexportReportRecordClientMockRecorder is the mock recorder for MockexportReportRecordClient.
type MockexportReportRecordClientMockRecorder struct {
	mock *MockexportReportRecordClient
}

// NewMockexportReportRecordClient creates a new mock instance.
func NewMockexportReportRecordClient(ctrl *gomock.Controller) *MockexportReportRecordClient {
	mock := &MockexportReportRecordClient{ctrl: ctrl}
	mock.recorder = &MockexportReportRecordClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockexportReportRecordClient) EXPECT() *MockexportReportRecordClientMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockexportReportRecordClient) Create(reportRecordID uint, filePath, reportType string) (*models.ExportReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", reportRecordID, filePath, reportType)
	ret0, _ := ret[0].(*models.ExportReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockexportReportRecordClientMockRecorder) Create(reportRecordID, filePath, reportType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockexportReportRecordClient)(nil).Create), reportRecordID, filePath, reportType)
}

// Get mocks base method.
func (m *MockexportReportRecordClient) Get(exportReportRecordID uint) (*models.ExportReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", exportReportRecordID)
	ret0, _ := ret[0].(*models.ExportReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockexportReportRecordClientMockRecorder) Get(exportReportRecordID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockexportReportRecordClient)(nil).Get), exportReportRecordID)
}

// GetAll mocks base method.
func (m *MockexportReportRecordClient) GetAll(reportRecordID uint) ([]models.ExportReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", reportRecordID)
	ret0, _ := ret[0].([]models.ExportReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockexportReportRecordClientMockRecorder) GetAll(reportRecordID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockexportReportRecordClient)(nil).GetAll), reportRecordID)
}

// GetByReportType mocks base method.
func (m *MockexportReportRecordClient) GetByReportType(reportRecordID uint, reportType string) (*models.ExportReportRecord, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByReportType", reportRecordID, reportType)
	ret0, _ := ret[0].(*models.ExportReportRecord)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByReportType indicates an expected call of GetByReportType.
func (mr *MockexportReportRecordClientMockRecorder) GetByReportType(reportRecordID, reportType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByReportType", reflect.TypeOf((*MockexportReportRecordClient)(nil).GetByReportType), reportRecordID, reportType)
}

// MockexportReportServiceClient is a mock of exportReportServiceClient interface.
type MockexportReportServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockexportReportServiceClientMockRecorder
}

// MockexportReportServiceClientMockRecorder is the mock recorder for MockexportReportServiceClient.
type MockexportReportServiceClientMockRecorder struct {
	mock *MockexportReportServiceClient
}

// NewMockexportReportServiceClient creates a new mock instance.
func NewMockexportReportServiceClient(ctrl *gomock.Controller) *MockexportReportServiceClient {
	mock := &MockexportReportServiceClient{ctrl: ctrl}
	mock.recorder = &MockexportReportServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockexportReportServiceClient) EXPECT() *MockexportReportServiceClientMockRecorder {
	return m.recorder
}

// ExportReport mocks base method.
func (m *MockexportReportServiceClient) ExportReport(exportReportRecord *models.ExportReportRecord) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ExportReport", exportReportRecord)
}

// ExportReport indicates an expected call of ExportReport.
func (mr *MockexportReportServiceClientMockRecorder) ExportReport(exportReportRecord interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportReport", reflect.TypeOf((*MockexportReportServiceClient)(nil).ExportReport), exportReportRecord)
}
